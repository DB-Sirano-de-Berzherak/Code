<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Приёмная станция</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css" rel="stylesheet">
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <canvas id="canvas"></canvas>
                    <canvas id="canvas2"></canvas>
                    <canvas id="canvas3"></canvas>
                    <canvas id="canvas4"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<!--suppress JSUnresolvedLibraryURL -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
<!--suppress JSUnresolvedLibraryURL -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js"></script>
<!--suppress JSUnresolvedLibraryURL -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"></script>
<script>
    $(document).ready(function () {
        const config = {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                            label: "Ускорение по оси x, g",
                            backgroundColor: 'rgb(255, 0, 0)',
                            borderColor: 'rgb(255, 0, 0)',
                            data: [],
                            fill: false,
                            },
                            {
                            label: "Ускорение по оси y, g",
                            backgroundColor: 'rgb(0, 0, 255)',
                            borderColor: 'rgb(0, 0, 255)',
                            data: [],
                            fill: false,
                            },
                            {
                            label: "Ускорение по оси z, g",
                            backgroundColor: 'rgb(0, 255, 0)',
                            borderColor: 'rgb(0, 255, 0)',
                            data: [],
                            fill: false,
                            }],
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'График ускорений'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Время, с'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Ускорение, g'
                        }
                    }]
                }
            }
        };

        const config2 = {
            type: 'line',
            data: {
                labels: [],
                datasets: [
                            {
                            label: "Высота, м",
                            backgroundColor: 'rgb(99, 255, 132)',
                            borderColor: 'rgb(99, 255, 132)',
                            data: [],
                            fill: false,
                            }
                          ],
                   },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'График высоты'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                    position: 'nearest'
                },
                hover: {
                    mode: 'average',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Время, с'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Высота, м'
                        }
                    }]
                }
            }
        };

        const config3 = {
            type: 'line',
            data: {
                labels: [],
                datasets: [
                            {
                            label: "Температура, м",
                            backgroundColor: 'rgb(255, 0, 0)',
                            borderColor: 'rgb(255, 0, 0)',
                            data: [],
                            fill: false,
                            },
                            {
                            label: "Давление, Па",
                            backgroundColor: 'rgb(0, 255, 0)',
                            borderColor: 'rgb(0, 255, 0)',
                            data: [],
                            fill: false,
                            }
                          ],
                   },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'График температуры, давления'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'average',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Время, с'
                        }
                    }],
                    yAxes: [ {
                      id: "Температура",
                      display: true,
                      position: 'left',
                      scaleLabel : {
                          display: true,

                          labelString: 'Температура, С'

                          }
                      },
                      {
                      id: "Давление",
                      display: true,
                      position: 'right',
                      scaleLabel : {
                          display: true,
                          labelString: 'Давление, Па'
                          }
                          }]
                }
            }
        };

        const config4 = {
                type: 'bar',
              data: {
                labels: ["РН", "СОС", "САС", "Качество связи"],
                datasets: [{
                  label: 'Параметры, %',
                  data: [],
                  backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(46, 200, 140, 0.2)'
                  ],
                  borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(46, 200, 140, 0.2)'
                  ],
                  borderWidth: 1
                }]
              },
              options: {
                responsive: true,
                scales: {
                  xAxes: [{
                    ticks: {
                      maxRotation: 90,
                      minRotation: 80
                    }
                  }],
                  yAxes: [{
                    ticks: {
                      beginAtZero: true
                    }
                  }]
                }
              }

            };


        const context = document.getElementById('canvas').getContext('2d');
        const context2 = document.getElementById('canvas2').getContext('2d');
        const context3 = document.getElementById('canvas3').getContext('2d');
        const context4 = document.getElementById('canvas4').getContext('2d');

        const lineChart = new Chart(context, config);
        const lineChart2 = new Chart(context2, config2);
        const lineChart3 = new Chart(context3, config3);
        const lineChart4 = new Chart(context4, config4);

        const source = new EventSource("/chart-data");

        source.onmessage = function (event) {
            const data = JSON.parse(event.data);
            if (config.data.labels.length === 20) {
                config.data.labels.shift();
                config.data.datasets[0].data.shift();
                config.data.datasets[1].data.shift();
                config.data.datasets[2].data.shift();
            }
            config.data.labels.push(data.time);
            config.data.datasets[0].data.push(data.value1);
            config.data.datasets[1].data.push(data.value2);
            config.data.datasets[2].data.push(data.value3);

            if (config2.data.labels.length === 20) {
                config2.data.labels.shift();
                config2.data.datasets[0].data.shift();
            }
            config2.data.labels.push(data.time);
            config2.data.datasets[0].data.push(data.value1);

            if (config3.data.labels.length === 20) {
                config3.data.labels.shift();

                config3.data.datasets[0].data.shift();
                config3.data.datasets[1].data.shift();
            }

            config3.data.labels.push(data.time);
            config3.data.datasets[0].data.push(data.value3);
            config3.data.datasets[1].data.push(data.value2);

            if (config4.data.labels.length === 20) {
                config4.data.labels.shift();
                config4.data.datasets[0].data.shift();
            }

            config4.data.datasets[0].data = [data.value1, data.value2, data.value3, data.value4];


            lineChart.update();
            lineChart2.update();
            lineChart3.update();
            lineChart4.update();
        }
    });
</script>
</body>
</html>
